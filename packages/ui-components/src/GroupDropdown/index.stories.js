import React, { useState } from 'react';
import GroupDropdown from '.';

export default {
  title: 'Components/GroupDropdown',
  component: GroupDropdown,
};

const Template = (args) => {
  const [value, setValue] = useState('');
  const [searchValue, setSearchValue] = useState('');

  const {
    searchBackgroundColor,
    buttonBackgroundColor,
    buttonBorder,
    buttonColor,
    buttonDisabledBgColor,
    buttonDisabledBorder,
    buttonDisabledColor,
    buttonFontFamily,
    buttonFontSize,
    buttonHeight,
    buttonLineHeight,
    buttonOnFocusBgColor,
    buttonOnFocusBorder,
    buttonOnFocusColor,
    buttonOnHoverBgColor,
    buttonOnHoverBorder,
    buttonOnHoverColor,
    buttonPadding,
    buttonVariant,
    typoColor,
    typoFont,
    typoSize,
    typoLineHeight,
    typoLetterSpacing,
    typoMargin,
    dividerBackgroundColor,
    dividerHeight,
    dividerMargin,
    dividerOnHoverBackground,
    dividerOpacity,
    dividerWidth,
    inputBorderRadius,
    inputColor,
    inputDisabledBgColor,
    inputDisabledBorder,
    inputDisabledColor,
    inputFontFamily,
    inputFontSize,
    inputHeight,
    inputIconColor,
    inputIconFontSize,
    inputInputBorder,
    inputOnHoverBgColor,
    inputOnHoverBorder,
    inputOnHoverColor,
    inputWidth,
    inputPadding,
    buttonWidth,
    RadioBackgroundColor,
    RadioBorder,
    RadioBackgroundDisabled,
    RadioBorderDisabled,
    RadioBorderChecked,
    RadioBackgroundChecked,
  } = args;

  return (
    <GroupDropdown
      {...args}
      searchValue={searchValue}
      onSearch={(e) => setSearchValue(e.target.value)}
      handleChange={(e) => setValue(e.target.value)}
      value={value}
      RadioStyle={{
        backgroundColor: RadioBackgroundColor,
        border: RadioBorder,
        backgroundDisabled: RadioBackgroundDisabled,
        borderDisabled: RadioBorderDisabled,
        borderChecked: RadioBorderChecked,
        backgroundChecked: RadioBackgroundChecked,
      }}
      buttonStyle={{
        backgroundColor: buttonBackgroundColor,
        border: buttonBorder,
        color: buttonColor,
        disabledBgColor: buttonDisabledBgColor,
        disabledBorder: buttonDisabledBorder,
        disabledColor: buttonDisabledColor,
        fontFamily: buttonFontFamily,
        fontSize: buttonFontSize,
        height: buttonHeight,
        lineHeight: buttonLineHeight,
        onFocusBgColor: buttonOnFocusBgColor,
        onFocusBorder: buttonOnFocusBorder,
        onFocusColor: buttonOnFocusColor,
        onHoverBgColor: buttonOnHoverBgColor,
        onHoverBorder: buttonOnHoverBorder,
        onHoverColor: buttonOnHoverColor,
        padding: buttonPadding,
        variant: buttonVariant,
        width: buttonWidth,
      }}
      typographyStyle={{
        color: typoColor,
        font: typoFont,
        size: typoSize,
        lineHeight: typoLineHeight,
        letterSpacing: typoLetterSpacing,
        margin: typoMargin,
      }}
      dividerStyle={{
        backgroundColor: dividerBackgroundColor,
        height: dividerHeight,
        margin: dividerMargin,
        onHoverBackground: dividerOnHoverBackground,
        opacity: dividerOpacity,
        width: dividerWidth,
      }}
      inputStyle={{
        borderRadius: inputBorderRadius,
        color: inputColor,
        disabledBgColor: inputDisabledBgColor,
        disabledBorder: inputDisabledBorder,
        disabledColor: inputDisabledColor,
        fontFamily: inputFontFamily,
        fontSize: inputFontSize,
        height: inputHeight,
        iconColor: inputIconColor,
        iconFontSize: inputIconFontSize,
        inputBorder: inputInputBorder,
        onHoverBgColor: inputOnHoverBgColor,
        onHoverBorder: inputOnHoverBorder,
        onHoverColor: inputOnHoverColor,
        width: inputWidth,
        padding: inputPadding,
      }}
      searchStyle={{
        backgroundColor: searchBackgroundColor,
      }}
    />
  );
};

export const Default = Template.bind({});

Default.args = {
  list: [
    { label: 'Value 1', value: 'value1' },
    { label: 'Value 2', value: 'value2' },
    { label: 'Value 3', value: 'value3' },
  ],
  popupBackground: '#1B1C24',
  dropdownBackground: '#1B1C24',
  popupBorderColor: '#2E3036',
  labelColor: '#8C8C8C',
  iconColor: '#FFFFFF',
  selectedMenuColor: '#FFFFFF',
  menuColor: '#8C8C8C',
  menuHoverBackground: '#2F3142',
  width: '81px',
  height: '40px',
  onActiveBackground: '#2F3141',
  onActiveColor: '#67D6FF',
  buttonBackgroundColor: '#2E3142',
  buttonBorder: 'none',
  buttonColor: '#FFF',
  buttonDisabledBgColor: '#666',
  buttonDisabledBorder: '1px solid #ccc',
  buttonDisabledColor: '#ccc',
  buttonFontFamily: 'Typold Regular',
  buttonFontSize: '12px',
  buttonHeight: '40px',
  buttonLineHeight: '14px',
  buttonOnFocusBgColor: 'linear-gradient(135deg, #75CFFF 0%, #5735FD 100%)',
  buttonOnFocusBorder: 'none',
  buttonOnFocusColor: '#FFFFFF',
  buttonOnHoverBgColor: '#3A3C45',
  buttonOnHoverBorder: 'none',
  buttonOnHoverColor: '#FFFFFF',
  buttonPadding: '10px 20px 11px',
  buttonVariant: 'contained',
  buttonWidth: 'auto',
  typoColor: '#FFFFFF',
  typoFont: 'Typold Bold',
  typoSize: '12px',
  typoLineHeight: '16px',
  typoLetterSpacing: '2.57px',
  typoMargin: '20px 20px 15px',
  dividerBackgroundColor: '#101012',
  dividerHeight: '1px',
  dividerMargin: '15px 0px',
  dividerOnHoverBackground: '#101012',
  dividerOpacity: '100%',
  dividerWidth: 'auto',
  buttonLabel: 'Apply',
  title: 'Filters',
  allCheckLabel: 'Show all display',
  backgroundColor: '#2F3142',
  inputBorderRadius: '5px',
  inputColor: '#FFFFFF',
  inputDisabledBgColor: 'transparent',
  inputDisabledBorder: '1px solid #2E3037',
  inputDisabledColor: '#3A3C46',
  inputFontFamily: 'Typold Regular',
  inputFontSize: '12px',
  inputHeight: '40px',
  inputIconColor: '#fff',
  inputIconFontSize: '14px',
  inputInputBorder: '1px solid transparent',
  inputOnHoverBgColor: '#3A3C46',
  inputOnHoverBorder: '1px solid #fff',
  inputOnHoverColor: '#FFFFFF',
  inputWidth: '326px',
  inputPadding: '5px',
  RadioBackgroundColor: '#14151E',
  RadioBorder: '1px solid #8C8C8C',
  RadioBackgroundDisabled: '#2E3142',
  RadioBorderDisabled: '1px solid #3A3C46',
  RadioBorderChecked: '1px solid #83D4FF',
  RadioBackgroundChecked: '#83D4FF',
  searchBackgroundColor: '#14151E',
};

export const SortFilter = Template.bind({});

SortFilter.args = {
  showSearch: false,
  showActions: false,
  list: [
    { label: 'A-Z', value: 'asc' },
    { label: 'Z-A', value: 'desc' },
    { label: 'Date Added', value: 'createdAt' },
    { label: 'Date Modified', value: 'modifyAt' },
  ],
  popupBackground: '#1B1C24',
  dropdownBackground: '#1B1C24',
  popupBorderColor: '#2E3036',
  labelColor: '#8C8C8C',
  iconColor: '#FFFFFF',
  selectedMenuColor: '#FFFFFF',
  menuColor: '#8C8C8C',
  menuHoverBackground: '#2F3142',
  width: '81px',
  height: '40px',
  onActiveBackground: '#2F3141',
  onActiveColor: '#67D6FF',
  buttonBackgroundColor: '#2E3142',
  buttonBorder: 'none',
  buttonColor: '#FFF',
  buttonDisabledBgColor: '#666',
  buttonDisabledBorder: '1px solid #ccc',
  buttonDisabledColor: '#ccc',
  buttonFontFamily: 'Typold Regular',
  buttonFontSize: '12px',
  buttonHeight: '40px',
  buttonLineHeight: '14px',
  buttonOnFocusBgColor: 'linear-gradient(135deg, #75CFFF 0%, #5735FD 100%)',
  buttonOnFocusBorder: 'none',
  buttonOnFocusColor: '#FFFFFF',
  buttonOnHoverBgColor: '#3A3C45',
  buttonOnHoverBorder: 'none',
  buttonOnHoverColor: '#FFFFFF',
  buttonPadding: '10px 20px 11px',
  buttonVariant: 'contained',
  buttonWidth: 'auto',
  typoColor: '#FFFFFF',
  typoFont: 'Typold Bold',
  typoSize: '12px',
  typoLineHeight: '16px',
  typoLetterSpacing: '2.57px',
  typoMargin: '20px 20px 15px',
  dividerBackgroundColor: '#101012',
  dividerHeight: '1px',
  dividerMargin: '15px 0px',
  dividerOnHoverBackground: '#101012',
  dividerOpacity: '100%',
  dividerWidth: 'auto',
  buttonLabel: 'Apply',
  title: 'SORTING',
  allCheckLabel: 'Show all display',
  backgroundColor: '#2F3142',
  inputBorderRadius: '5px',
  inputColor: '#FFFFFF',
  inputDisabledBgColor: 'transparent',
  inputDisabledBorder: '1px solid #2E3037',
  inputDisabledColor: '#3A3C46',
  inputFontFamily: 'Typold Regular',
  inputFontSize: '12px',
  inputHeight: '40px',
  inputIconColor: '#fff',
  inputIconFontSize: '14px',
  inputInputBorder: '1px solid transparent',
  inputOnHoverBgColor: '#3A3C46',
  inputOnHoverBorder: '1px solid #fff',
  inputOnHoverColor: '#FFFFFF',
  inputWidth: '326px',
  inputPadding: '5px',
  RadioBackgroundColor: '#14151E',
  RadioBorder: '1px solid #8C8C8C',
  RadioBackgroundDisabled: '#2E3142',
  RadioBorderDisabled: '1px solid #3A3C46',
  RadioBorderChecked: '1px solid #83D4FF',
  RadioBackgroundChecked: '#83D4FF',
  searchBackgroundColor: '#14151E',
  selectedValueColor: 'rgb(103, 214, 255)',
  disabledColor: '#3A3C46',
  disabledBgColor: 'transparent',
  disabledBorder: '1px solid #3A3C46',
};
